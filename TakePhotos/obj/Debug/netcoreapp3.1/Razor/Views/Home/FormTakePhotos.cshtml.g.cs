#pragma checksum "D:\Outsource\take_photos\TakePhotos\Views\Home\FormTakePhotos.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "def7186fb71bc4af62a52496e125bd4f09dd96bb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_FormTakePhotos), @"mvc.1.0.view", @"/Views/Home/FormTakePhotos.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Outsource\take_photos\TakePhotos\Views\_ViewImports.cshtml"
using TakePhotos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Outsource\take_photos\TakePhotos\Views\_ViewImports.cshtml"
using TakePhotos.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"def7186fb71bc4af62a52496e125bd4f09dd96bb", @"/Views/Home/FormTakePhotos.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"256061f58417551421c7bcd7cfb8db58c9e481f1", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_FormTakePhotos : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\Outsource\take_photos\TakePhotos\Views\Home\FormTakePhotos.cshtml"
  
    ViewData["Title"] = "FormTakePhotos";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("<div class=\"col-md-12\">\r\n    <div class=\"jumbotron\" style=\"margin-top:20px;padding:20px;text-align:center;\">\r\n        <input type=\"hidden\" id=\"StudentCode2\"");
            BeginWriteAttribute("value", " value=\"", 255, "\"", 283, 1);
#nullable restore
#line 8 "D:\Outsource\take_photos\TakePhotos\Views\Home\FormTakePhotos.cshtml"
WriteAttributeValue("", 263, ViewBag.StudentCode, 263, 20, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" />
        <p><span id=""errorMsg""></span></p>
        <div class=""row"">
            <div class=""col-lg-12"">
                <!-- Here we streaming video from webcam -->
                <h4>
                    Bạn hãy để khuôn mặt trước camera. Hình ảnh sẽ được ghi lại sau <b><span id=""timeCountDown""></span></b>  ");
            WriteLiteral(@"
                </h4>
                <video id=""video"" playsinline autoplay></video>
            </div>

            <!--<div class=""col-lg-6"">
                <h4>
                    Captured image from Webcam <input type=""button"" class=""btn btn-primary"" id=""btnSave"" name=""btnSave"" value=""Save image to server"" />
                </h4>-->
                <!-- Webcam video snapshot -->
                <!--<canvas style=""border:solid 1px #ddd;background-color:white;"" id=""canvas"" width=""475"" height=""475""></canvas>
            </div>-->
            <canvas style=""border:solid 1px #ddd;background-color:white;display:none;"" id=""canvas"" width=""475"" height=""475""></canvas>
        </div>
    </div>
</div>




<script type=""text/javascript"">

    var video = document.querySelector(""#video"");
    var displayTime = document.querySelector(""#timeCountDown"");
    // Basic settings for the video to get from Webcam
    const constraints = {
        audio: false,
        video: {
            widt");
            WriteLiteral(@"h: 600, height: 600
        }
    };

    // This condition will ask permission to user for Webcam access
    if (navigator.mediaDevices.getUserMedia) {
        navigator.mediaDevices.getUserMedia(constraints)
            .then(function (stream) {
                video.srcObject = stream;
            })
            .catch(function (err0r) {
                console.log(""Something went wrong!"");
            });
    }

    var timer = 15;
    const myInterval = setInterval(myTimer, 1000);

    function myTimer() {
        if (--timer <= 0) {
            Capture();
            clearInterval(myInterval);
        }
        $(""#timeCountDown"").html(timer);
    }
    //setInterval(function () {
    //    $(""#timeCountDown"").html(timer);
    //    if (--timer <= 0) {
    //        Capture();
    //    }
    //}, 1000);

    function stop(e) {
        var stream = video.srcObject;
        var tracks = stream.getTracks();

        for (var i = 0; i < tracks.length; i++) {
           ");
            WriteLiteral(@" var track = tracks[i];
            track.stop();
        }
        video.srcObject = null;
    }

    function Capture() {
        var canvas = document.getElementById('canvas');
        var context = canvas.getContext('2d');

        // Capture the image into canvas from Webcam streaming Video element
        context.drawImage(video, 0, 0);
        SaveCapture();
    }

    function SaveCapture() {
        var studentCode = $('#StudentCode2').val();
        // Below new canvas to generate flip/mirron image from existing canvas
        var destinationCanvas = document.createElement(""canvas"");
        var destCtx = destinationCanvas.getContext('2d');


        destinationCanvas.height = 500;
        destinationCanvas.width = 500;

        destCtx.translate(video.videoWidth, 0);
        destCtx.scale(-1, 1);
        destCtx.drawImage(document.getElementById(""canvas""), 0, 0);

        // Get base64 data to send to server for upload
        var imagebase64data = destinationCanvas.to");
            WriteLiteral(@"DataURL(""image/png"");
        imagebase64data = imagebase64data.replace('data:image/png;base64,', '');
        $.ajax({
            type: 'POST',
            url: UrlRoot + 'Home/UploadWebCamImage/',
            data: { imageData: imagebase64data, code: studentCode },
            /*contentType: 'application/json; charset=utf-8',*/
            dataType: 'json',
            success: function (data) {
                if (data.response >= 0) {
                    const random = Math.floor(Math.random() * myArray.length);
                    console.log(random, myArray[random]);
                    swal(""Chào mừng bạn Đặng Tuấn Mạnh"", ""Mời bạn về máy số "" + myArray[random] + "" để dự thi"", ""success"");
                    myArray.filter(e => e !== myArray[random]);
                    setTimeout(function () {
                        window.location.href = UrlRoot;
                    }, 3000);
                } else {
                    sweetAlert(""Oops..."", data.message, ""error"");
              ");
            WriteLiteral("  }\r\n            }\r\n        });\r\n    }\r\n</script>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
