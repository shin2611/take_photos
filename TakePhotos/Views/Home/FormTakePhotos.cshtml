
@{
    ViewData["Title"] = "FormTakePhotos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="col-md-12">
    <div class="jumbotron" style="margin-top:20px;padding:20px;text-align:center;">
        <input type="hidden" id="StudentCode2" value="@ViewBag.StudentCode" />
        <p><span id="errorMsg"></span></p>
        <div class="row">
            <div class="col-lg-12">
                <!-- Here we streaming video from webcam -->
                <h3>
                    Bạn hãy cầm thẻ để trước ngực, mặt hướng vào camera để chụp ảnh. Hình ảnh sẽ được ghi lại sau <b><span id="timeCountDown"></span></b>  @*<button class="btn btn-primary" id="btnCapture">Capture to Canvas >></button>*@
                </h3>
                <video id="video" playsinline autoplay></video>
            </div>

            <!--<div class="col-lg-6">
                <h4>
                    Captured image from Webcam <input type="button" class="btn btn-primary" id="btnSave" name="btnSave" value="Save image to server" />
                </h4>-->
                <!-- Webcam video snapshot -->
                <!--<canvas style="border:solid 1px #ddd;background-color:white;" id="canvas" width="475" height="475"></canvas>
            </div>-->
            <canvas style="border:solid 1px #ddd;background-color:white;display:none;" id="canvas" width="475" height="475"></canvas>
        </div>
    </div>
</div>




<script type="text/javascript">

    var video = document.querySelector("#video");
    var displayTime = document.querySelector("#timeCountDown");
    // Basic settings for the video to get from Webcam
    const constraints = {
        audio: false,
        video: {
            width: 600, height: 600
        }
    };

    // This condition will ask permission to user for Webcam access
    if (navigator.mediaDevices.getUserMedia) {
        navigator.mediaDevices.getUserMedia(constraints)
            .then(function (stream) {
                video.srcObject = stream;
            })
            .catch(function (err0r) {
                console.log("Something went wrong!");
            });
    }

    var timer = 15;
    const myInterval = setInterval(myTimer, 1000);

    function myTimer() {
        if (--timer <= 0) {
            Capture();
            clearInterval(myInterval);
        }
        $("#timeCountDown").html(timer);
    }
    //setInterval(function () {
    //    $("#timeCountDown").html(timer);
    //    if (--timer <= 0) {
    //        Capture();
    //    }
    //}, 1000);

    function stop(e) {
        var stream = video.srcObject;
        var tracks = stream.getTracks();

        for (var i = 0; i < tracks.length; i++) {
            var track = tracks[i];
            track.stop();
        }
        video.srcObject = null;
    }

    function Capture() {
        var canvas = document.getElementById('canvas');
        var context = canvas.getContext('2d');

        // Capture the image into canvas from Webcam streaming Video element
        context.drawImage(video, 0, 0);
        SaveCapture();
    }

    function SaveCapture() {
        var studentCode = $('#StudentCode2').val();
        // Below new canvas to generate flip/mirron image from existing canvas
        var destinationCanvas = document.createElement("canvas");
        var destCtx = destinationCanvas.getContext('2d');


        destinationCanvas.height = 500;
        destinationCanvas.width = 500;

        destCtx.translate(video.videoWidth, 0);
        destCtx.scale(-1, 1);
        destCtx.drawImage(document.getElementById("canvas"), 0, 0);

        // Get base64 data to send to server for upload
        var imagebase64data = destinationCanvas.toDataURL("image/png");
        imagebase64data = imagebase64data.replace('data:image/png;base64,', '');
        $.ajax({
            type: 'POST',
            url: UrlRoot + 'Home/UploadWebCamImage/',
            data: { imageData: imagebase64data, code: studentCode },
            /*contentType: 'application/json; charset=utf-8',*/
            dataType: 'json',
            success: function (data) {
                if (data.response >= 0) {
                    const random = Math.floor(Math.random() * myArray.length);
                    console.log(random, myArray[random]);
                    swal("Chào mừng bạn Đặng Tuấn Mạnh", "Mời bạn về máy số " + myArray[random] + " để dự thi", "success");
                    myArray.filter(e => e !== myArray[random]);
                    setTimeout(function () {
                        window.location.href = UrlRoot;
                    }, 3000);
                } else {
                    sweetAlert("Oops...", data.message, "error");
                }
            }
        });
    }
</script>
